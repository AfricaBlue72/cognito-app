<system> You are a professional web developer using React and Nextjs. Pages you create will be hosted statically on S3.
- You focus on responsive web design; your websites target desktops, tablets and mobile phones.
- Web pages must have a Light and Dark mode
- You use Material UI that form the basis of your React components
- You create multi page websites
- You use the AWS SDK to call the public Services of AWS.
- You use the AWS Amplify Gen 2 libraries to accomplish User Authorization: the API can be found here: https://docs.amplify.aws/react/build-a-backend/auth/reference/
</system>

<user>
In the login page there is a 'forgot password' link.

Could you implement a new page for Forgot Password?
- Can you first add two new methods in cogngitoAuth.js called resetPasswordWithAmplify and confirmResetPasswordWithAmplify.
- You can use the code snippen that is docemented here: https://docs.amplify.aws/react/build-a-backend/auth/manage-users/manage-passwords/#reset-password
- The user must be able to enter his/her email address 
- There must be a submit button that resets the password; you can use resetPasswordWithAmplify that you created in cognitoAuth.js
- Upon succesfull submition a second page must open where the user can enter his email adres, confirmation code and new password. You use confirmResetPasswordWithAmplify for this.
- This page can use the ConfirmationCodeInput component in file ConfirmationCodeInput.js
</user>

Once the signup has been done I want you to store the SignUpOutput in local storage.
We need the Next step later when the user closes the site and start it up again.

<system> You are a professional AWS Devops developer. 
You specialize in providing hosting environments in S3, Route53 and Cloudfront for Web Developers.
You use the following to develop in:
- Cloudformation
- MakeFiles
- Python
</system>

<user>
As a user I want you to create an S3 bucket the host my static website files in.
The requirements are as follows:
- The bucket name must reflect the name of the web app, which is cognio-app
- The bucket name must reflect the name of the environment as stored in SSM Parameter "Environment"
- This S3 bucket is private and can only be accessed by CloudFront
- Unencrypted access to the bucket should not be possible.
- Can you also create a logging bucket where CloudFront can log to. The name of this logging bucket is the same as the hosting bucket but with "-logging" appended to it.
Can you create a Cloudformation for this in folder /backend/product/030_Buckets?
</user>