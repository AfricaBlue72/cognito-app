AWSTemplateFormatVersion: '2010-09-09'
Description: S3 buckets for hosting static website files and CloudFront logs

Parameters:
  ProductName:
    Type: String
    Description: Name of the product

  Environment:
    Type: AWS::SSM::Parameter::Value<String>
    Default: Environment
    Description: The environment name from SSM Parameter Store

Resources:
  WebsiteHostingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteHostingBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudFrontAccess
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${WebsiteHostingBucket}/*
            Condition:
              StringLike:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/*
          - Sid: DenyUnencryptedAccess
            Effect: Deny
            Principal: "*"
            Action: s3:*
            Resource: 
            - !GetAtt WebsiteHostingBucket.Arn
            - !Join [ '', [ !GetAtt WebsiteHostingBucket.Arn, '/*' ]]
            Condition:
              Bool: 
                aws:SecureTransport: false
                
  LogingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LoggingBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub arn:aws:s3:::${LoggingBucket}/*
            Condition:
              StringLike:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/*

  WebsiteHostingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProductName}-${Environment}-hosting-${AWS::Region}-${AWS::AccountId}
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders: [ "*" ]
          AllowedMethods: [ GET ]
          AllowedOrigins: [ "*" ]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  LoggingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProductName}-${Environment}-hosting-logging-${AWS::Region}-${AWS::AccountId}
      OwnershipControls:
        Rules:
        - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
        - Id: AutoDelete
          Status: Enabled
          ExpirationInDays: 30

  LambdaArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProductName}-${Environment}-lambda-artifacts-${AWS::Region}-${AWS::AccountId}
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled

Outputs:
  WebsiteHostingBucketName:
    Description: Name of the S3 bucket for website hosting
    Value: !Ref WebsiteHostingBucket
    Export:
      Name: !Sub ${ProductName}-${Environment}-hosting-${AWS::Region}-${AWS::AccountId}

  LoggingBucketName:
    Description: Name of the S3 bucket for CloudFront logs
    Value: !Ref LoggingBucket
    Export:
      Name: !Sub ${ProductName}-${Environment}-hosting-logging-${AWS::Region}-${AWS::AccountId}

  LambdaArtifactsBucketName:
    Description: Name of the S3 bucket for Lambda artifacts
    Value: !Ref LambdaArtifactsBucket
    Export:
      Name: !Sub ${ProductName}-${Environment}-lambda-artifacts-${AWS::Region}-${AWS::AccountId}
